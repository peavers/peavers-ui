function GetCellSettings()
	return
	'!CELL:229:ALL!T33d8nX1DEYGSahrtW8htMKqIhmqiOGbJn2akPjrYsGTX2YvwM0aK1ZiPXEuqsZWmJGyssBWqPSD3UPXnh3(N7UL62TTPPTBQkLTB3KUn(YMDBt7MFXHWoxUU324stB22MELlBZTTP7D)EV3msJKnGHTzBAQ5dJ1O38E)E)E)E)E)EF)9BMFA4oMG(qY5K1LYCSAgXqr9a9PMrvuFqPuYrZBkQTuL0PKJRQMXmTMrh5AtnBcjS4LiL5asdB0Vwkjt5WYjYp4GgIJNvox(EvnsBMwn3yMQAdKq10un7KY5KsKPivehXuxkNrM0MkJs6XEL0nhwuBrUjzikb1weP3dLj9bpOKEkw9MyqDPSY9QNwvpT5WAlpNQEwPmdyOPAMj9qkMdSV8PtUxjdJ0gMjYOMCVYPukOUFzDDKuDT9TPOT08gYTLroF7Yszmvy9NUIwnU7RysPtjQvJPnl7mO21yHIgpE0U7kY2IRhwEqP8zm1JhTxY35QBYK5nWHBC571mVUSHVcuwjiLv8nrYm4xAtYWmDUHmoEI27VN4rID0JSl)(JHJd5nMWucNkmzFRju8n0qzKjs0ZXemXPxgB8op9chjvAdIinvIKQzZQMdeo7cbHxhpoYUaHtVq)(HRdwUF46HBawHRVCw3xzuICG2CXx3D5AlYilkQJjBKxxxojzCdc63zWyX6iASJ(qUPDD78HaHpkiaRaeEyqif25F0ZxF)WUVq9IP2L7VVsqirFThS7G9C0u1eO0fcuGinAWqj9GMXIzOjNjZrEaSBtvdiyIhhPgwNhExKZD3q4gH1GvDfFd)JItZnqfX41k(LMi156G1uDDHduGsFAXnJTkK7cAcwZzV1aJL0upJnrwdpxdDgGonTjS9)e1ayhIfU(tWkSzYxQ7fduSR2uSSsj1v1w6gqjUWUVJSQ4NevY7wyJnhqRgkTDZcnQTKPw1T6IjqMIFE)URl8UMMrC9IMtNGyLjyRuc1DWTh5OhQ8zXdXKIpai8(bHhzxKJZ304du(047VYzXEJ1rK(IF0vnfEifzERkC(AP2Zzpn2pRI(9tuJF4Mi1DT2tkN(bPY0Ng)yDWAEDHaGFynHxDa4MH1SYaqdWAoz1mHDl4mWH2ujznk8REnD5EceNWw1dovPmDE8gYgaW5qEpc95s6sOXx5Zga2aormDZzBkWKKUZv9BeAgwXmBu0ulBTvxJJM2yZBnaSfynXAU5g3mELTINUXgBS1gdabG1eQPgBbp7wWc3CZn3ulu2nrtnUPTSLMda3kw8M28M3YwO8k8Uda3gHvE6DnnY(6vQQMtSOzchYp334B5IdH7GYFqqkVbHO8f0gLPGWugcIW4fKdBS1Y5LaW6rP5F5jrDJw07nyxbd3rph9d3jT35565rP9F1DFJ0(iCqApE2Bh1u(aGWj3ftr5WGWhM8ToDnQgLAxaNgIH0X7B8hqhMvV8taRyxSL1r)xzD9sUVsDrdo95wiNe84h(ZuQUo1XPnBXPUnWQlDyZp3uVgv0u9ZFlmzL3F4NkaktrEoakvXrakO)aUzuOJkyWvobBH4nNKUxASWX6VJWh)5QSnv3BvSM8mVhyfVufZBvx)pGYyPyAjv3(i0jNQ33RrNpQ(jBLoHYZDxdXy3d)DPJmEUh65Otv4jpdBIAJ(XAEdp)fQ7xj05lCHUEDdAIZuphBY6Bbcppi8cO55DDbAZ36crV6fd1D0E2Xr)etrpMN7P(NrDJtJwnoRJve8ZpbztVAM2kJ2)lx0XZ93(vTny)uFFBP04)C2Sl333NT05VBF2t8p1Zzl4o7xWwEzRy7FKCQMHuZNlfS8Zo99D9Ip90FbCTqIi7m6oW9)F6DFIAy8L3d)lPvZHFJnOkINGo9X79p(G2QB56GPA6DKvYmD59l9dzJcVh6amE27X3bvBG37hNzJG3RrtUTi2cPOp1RYgZEFOn7SIvBPfnRv2UrOXT625tVBCxHDZK5lDp4Yr63NYWZ7HxaSIPR0LUNPTU1RCYPNiOm6CPOaldLrk5EZGyOorTvlCu(5UVRV6x((Q(LVFEUTojFvxXpL37)Yk59S6TZp338RX7vQjEVATHRlNpVN74FKFEB(lYpVd)W8Z73)r49(Q7JFEpWxN37J((qXwT8v9M)rA1MoxQ0jLmv17vxE)PLpqWmAksEgLcDJGwZ3yPKhuoNr69lBCJGWY4N75wRycgspFJIq9K1ZjLHCjFWo9nMKMMSecVnP8XwUwTQAe0tgBtnNzFPpOCueuRSjxcdeaSPuIUJeUJ(7(Cs51L6iPAUOSkVtTLMclHCEBiwC9iuWZPuoNtPHLtMgTFWnQuo8tsjJ4CPI1jgrXSFnLjlJugbcW5HRtpE461tJRVLo9WXnF9edXgYXmskLrU3Q246BztfyyrPnQtp9wvJRV5nY(RNjX9b7kDcc4zc4rLrhmFMm0k6xjaHSnv6pOaa3Xe1LKZKkMm5u5TLotgLXkvSFrKD84z8es6bDgoj6lRQQPIUjdi94THO(eSrBpMM6bK1z9xb65dKK8fAxV5s)5CQ5nJoymPCdjthEeUFtTKOSoDeStTPuYmOhdUOKRbXekOBfuxlitHEMubh5OUcQ1q41aIkeArQ5MMSiibBbhR8wlGLUD0PfIAG4OzunmysCuZsYuPOSZloLSPw44kiLmPCoMW3pyeWt73(ZVO6ExB6PEuAVOvlHdcMWqvprh5WoJvtfkHzncb7uA8mqkj99sPERTUzoUXk1AIyGqYns)dvCWySjhsxkvAhEa1AqfLa0QUzoMG2dxbD0fjBp)8LGS2XqEC9MAARnOlNrwYqEKbtRByglFoLcA6QdMoJ8oKhg1UxgQ6KstrnNSqdc7qoZAIRK)GsPgTxzjIwr)DOX3NuEdPHKtiHZ7URd8blEnJ9MoxLx7AOwkmyvOYlUuB6xr5JLi9q2JIoR(lTfEpp2TW7P5XXp)ZlGRjnYNLS6ZiG)Q53V)fhKo63Kho)Ob0OKV3(T)PFSip7TmqJTF7p1VO)V3N)37J5bV2J2R)6BR5a4cTjqp1qVwIjVV8YgMhvx2E1SEkBrNUz6SYOYATJJUmQH9OCCcaFCOFowtZqAqOH7wwSazbHTvIdU4GKLVEccldw2YNZccrSvhIuHcdLr9a21YFmuHpN890jBfpY4ClHU03RwnvA47gHuxHoXF8GzYiooTNT56JdpKc8W1cJwFw5e0ly4)OWFO)yAPVx5mhKypHsyCjwtTSiVWXdLgfD60A2rkeo(OPncLpDgZoYjMGmQPfoYELh(aQ6PmMSxYYyHoYnyEdIVM)P8ZDjEgLqcNLrCEiDh8F7GDYHRPkRRG)u4eiSh4JjcJr(8JpAh5YjRVF0NEkH0G)mAJqNAvKWvTUm0EpHsGR)2CbMl9X6y7ThhEuoUZT3CQhixF0Hz0CzgwCIKkYj3Bhdg5EX9GmeNqxwlZWTPQMjfwprTAguxw25R0gOvtgPHXP0G5nv77aPntQ8jHR1hSkFWQ9bT6d2SVq6QzKBvpCqIZyXo6eK1sdKoNHjzJJc9G4dtllqIbrmnsqpAcx5mjIv0mJ8q6el7BSfu)HApSSI3uJWPORlhi7WMkPtcfIjr04GtfYafLWjhNErK1sPQQdfcfpicZc(cWPGViE8LWJ)c84lJh)L4Xxboj8xbNkr7rc2fYLy9kG17Ky9kG1Ra8Ll0nTBOCk2ItA3Icq7(GD4d6Xh0LpTL6SjinUn2bsX)rw(PB3E)DI(oDME)ZT1fNGBXdXTyDIs6w0dJ2uqljSsPkWSR0ASqzKLt16I19qQDcUe9QM2qnxPkIxIlwB51Pn2trs2ASULgkDswz21JAKpuo0Eu59(uHg0hzdYRqNn5ASn4uhDSIvX4e3WPGhseo(ijiA6nKo3y0av1fUTxgpXOwI9pod2G9(meTYLSFzuaMrUh3YMMIhT3LpNqdIBx0jK96c1dYBIHYHvzus9eibyAen7A3zI2IqIKe8ICCtuKDi1Besli19CKv1Bh1q06jF2eY4wfe7e3z6uMk(httwNSBdAXKSOAZT8jPJc4Bap7Aba7(LapVimrH(mLmZBq7A40(tWwZ8MZboZyg0RqUWKK(jeAcMPnIOKOBFCC9OBBBD1rpryij24wz)1tST3E0(IxrHJeosBK6gUYYd2wBr6nowoTGM8y)rOWrcoL6gowh9SJo6z721LnW84j22I0X27bTNy3w9EJ0tys1kwstb32oQGy0qughTrRl(jj2bPIgVW30p8TiZGuzuTmzelGI2YOoHNdNs2drcPqlNuCIbjU(zcVelYMOnLSAMdhvFBigkLlc5hJzM0H6pkARA(WzgLIbIw4pkro60l8Jfh0HutOTihUsb3FrbTszaNrRgBwQyzJzw80R1pfPhfDONrjRV3Bozddp73rXOOYaXwkBG(CC3AjvbAXpBTHmq4s(x9QpErfkpWeJgdn8vSH4wxCCWzgHynKuwbYj2HpTt4uAn3roeE9GsjL3tWuPIMZyprYS)(7ypTPQlVNUriys7XjyR7jUuU9UEZHK0A5sOrezJSoTznDj0SW92hPnfiZHHLYIRD0fH3WFD15sg1fIYHSRgBOocUKMUdJf3C88zjYQm0RtU84uvbNqRJ05QV6blshTAIHvCyH2i7bXO2zMuNueTeMS(RJnAfR4OLA0IjwKP1w4M0q7vY6R1zI6AW2ZkIuhw79gtYbJ8wBgPvdnC0skqUPfZTahA9JMdQaojRmxeZIB(0vCBgP01F9LejteCi0WGWnLit6C7DTUM)htICHqKIHND(ubGlbPtRKyJHLITz5OaCewJK0j6vVH)1EfL05N0Pji6cYi)mfy1L(v419cp7cpU71Aueg4cS(OohiqOjTJwkH5gL5YawO2suXD37dnheTO7lgkjuKj(gCfd6IJvJiq0SsNBiYGtv25lFtcIqlULu7ZuS7RTGQobPn1XNj0jKQbt1gYipO5euWyoofjcG)peK9Q1JM3ejMScQj51dXgbPulURrbEuVlFouJg4KweBhtfCqMyqgtVi8IEXXK2IC8BT4vBcTD4DCspg22JrfuQw7QDXPwClBccFr4pkJAXX7WvK()cYqljSJx0LXrHi35eloH1nhcBT4IUAxSowClhvOUEkZSYNPOPecZyXDdxkCWYCejgc3SqrUXrSSU5Sa4mJlLjJ7EE(f7zxRTwgXsJqq07pCS0nUh8quXLT(CTKXXsrCC7Lvdxv4BsCMJHC1dhrXd1AVYtvCivN2sOIFkOFcMiYYjdr6a9QHj0zxWWX2)vaNrN5GGrjpujnBchN3AqrkZGWJqgaxZ18ZW(HmIi9l2DAxnZrKIXwbvR1ntM3uH0GZaFKlbjRUT)tfO7uYUJzkS5hKzXwsS5Xzlk9FDxN)vUYxHXnEqqgy5Otb0LMuod78dnd74XPwMS7D75rU57Oz0GY5CwVgxvB7OtrIoM2Cmi1REAIJccbrvEdhdKOnTX1yxGv(Z2S2IDvGJRvIKHZQxDjDszlU17TObr5umxiaa58RPSHcmX5IBxhb7krz(LTW7FomUFcB)WyxvHkQqTL1wYSvDeJjLCENItOoQ8zIjzehxNLNSLMZ4c1VNWjSo0lOJ(KJFy0AtAiku8pAI62UgOuAz)AjJk7zZz20YKTPREGuy3NZe3pV4edUWyIKKRu8cpIcvJKmPSZswpBRKx3OUWhMCt)Kt5Pe4OAXgCDxho71DAdd0QQqiNPF7LfJNLDbA5SvXKLqwCBDWqDRAENI1hmKyt9ENBtCeA4fjUwhkKQziX6d1N4XwmrtnrsjdZqdJo8swiqXaIGEsUxr0RwPKiX9t34QiE7nYykYGigXZvuRzbJqcShzfzis3WeE1ErxmXGKqhpFB4BZ9TNJd3V8fmgAJUxz9UqR)ligH4gNO5QR)hKQr(5kEOQp83LFUFNJw9t2kji)4bW79N)c8E)9EnEVF6VojmV8EZjZ79V(0KaeZ79pPkEVNCqEVp9dZ7TWs4Nx1c8ZB(FeEVh6(4NxWxLFEB6BYpVw8YZ9c3cjS48Z9hlYx1p7UQ(5VfEpkDYp3qBNCVq49CL3fFvjAK37p8ZrUvi4XNbpEmEpl8V)Kvx9yF8vYp33OxEU1)f49(4QN9w59(sNO6FIkV3t3oV3NOqbIJcABJQg(HeT)xOSsPZ9kJylNVlI(Xh4UD(67D(tMpxAtJEPXylF2ClySSs3l7uJfHEMS0TSPvmb5oRGcjQlpgkJsqvgLyGja8eWtcpEc0lB0ChSSXP9FFmsJwOw2iKWPHZOzgZanhgAycAvfgeBsW)8ocbQwFYzguz0IpWbpJwTgOJwb11jbBmlA4nOr34qanW1hQ6fF(XOCSVZrABVO9wzcmB0lSjjnJq2I1hNO3nCAFwC3fUvYdH6j3Tx6OFCkhWKtghRMcOppXBFh9qWtEJWJlcpHiSk7tIfl627pIi0ER2x4jfHwfHUk9v9DgP9oARlSoBM2gScR2(KM6P32ej3P)UI22oeXUP7O9WEofSPEt9gjUiSdx0UhhACTItIq0IwcmJ)XqzC6dIl2LYi2uoTKNIA0VV5pIHSMeIXGaHj(8Pdwlor8sjDlcSh6nPjBEk2LzsZXPreXoO4I2T(U9wwRPXaXjU5uYaF1JAXPvgHS4235P5wC6SwzXLXVfxwKpJ9kKMHf(f3hRT9ValU7ubv4EKvVQLyXTZfzX9EdGkxpb842eDxCucM1IBpISU43bj0apJTuGrgPRfIIe51x(PVklUe2SaJzkkwSLewCPownwCYvoJBXn4fA62IBOPzM2ItbpsJh3trYS3Z7mRf37HU8ub)NfxoIyuHnguflohsvytY24ploM2018i1yZ8FS7g(6oXhH5iyr)B)79dphcNNS911rDZfEbxBya)dGLc8)Wp8sxOGta)pXUd(2KOra)JW)lr4F64W3Pc34HxUYcMSYc(UveAb4SvwJVxfbuaELsHoa((Uo)huzlF1lwWdG)z3Hma(HWpcEj4hFXIja8AUcfa8tWg9)UmV)HFkw85G)pL5tp86U8Lh(xC7bp8Zy7VwHx7W)xhV1q8nW)k8Z7C0e2pOunb)c4nHFj8VraxvBTUi8)VsG)QfoJfhUCyUv6DRfYn4LQAQUWAHDvjpwT4MxjhlNIlQwCv72JuleeW04fAXk7ZLRNwiSOsUCwSkVl3EAAXDLU8XSi)DvKRSWIUtk62DsYo5wC1uucGuaRmAJyX46JLSWbD1vlLCLANwxdD25FgJe3I7AD5LNf31527PvxjLVHljkxhDWi44RMf3kopUMTeIFIMQAe3ezp)Fxs9t9f7ho6C5kT9dJEBlOZLUvswLJBxub8QVO(yzXDJI2GzXwVgxOgT4UjloeSR)sEmzJp9zPJslUBwKA62wYPmJhrRZLxqmxRAGXoO3qRCLmVHuC5ne1nc86xsGUT42aXLhQ3tL8eQXkD5XIBJU8ZXIRj07glUMD5mJszoZyXTPP1bglUwQ0NflUwVeDuXIBZUCoXIBlie9wT4cGK5wqPWT(VlVqS4E3U2iXI72ME3nS4UDIxgwC3b1fd2eUJlgwCblQHy7ho1dvlUqeVjS4AJ6lHfxy8icESnMle4sGRhxJTDM7dirBhVwh(zmsNiXx5kzoaJgFqCeDzX1nCClUDmd9rWIRhh3d2JTWVGPo6DsOHjX9hjCuKQ9odDoG4yGJdbooiGoeqDoG44a6GWV6DoG4wWkr)doz1NxNdGtoDq2uCGiPRueMKB8IvczJH6QeInhmzLdyJGqJGxJsm)h52IVeBc(LKpFWUqyrvI6QNIGRMEix7DkqUukhYvzW2gu88HwSHJuhdbwcrxqfzILIIHCNIQotbPzlby1qu88i4kHX7IJwBSi3RMUSHXbKgE6HTvcZgIGBgcB7vNHi3(bVfICRsuH)6e22R7PcKBZqyBiwSPd1gbFgT1)CC7idgUTF7dV2ZsGSDrXR1RNwq0gmmBl5krCBItfZgbTgd3MlKv2WUUSGS5G3Ja2y5EReZMnMRlxiBoBsxI4UXSzJ06YeNgL2MoG0S3L9TqGA0TYPy1QaOgd20nlsHL6o2ZxkW1O4ZO40OD)djoDa1y9ebtcbWwdZCYVHIWZiy1CMv(nwGA3kfSwfa1y4TU0XP5WF4Cjfe(fhO2fcgw543SrTveehbHNdqTFthQ0faKjdxPdktgM0lFyMwC5TrxIqxlCugkdXPekig6KsruZF4DVQgoVq0WcFS3tjmAeKzeSyeSALfsnKoXVJtYZqRXqX5evTIq0uGNqHcrJEcbFg9ekEkfOvfkeRIfnKcfMMIdmnwPKyCLwHbtJuve4McfMMD7O48ONCT0a6vocvj)WYdrU)Fe4zKq7TItZBlukkqEiXPa7Ia86YicLZK4QTOzJR2VXexTIaZMnGAZCaA0GQDLVJpOAuiwxEi04MUiPvBTVtksAopxbZgjTFRksA1v3VIJKwjio)MoQWrSt7cJLbFWJvh8HVSZHbG7y1a4wnEeHQebVIW8G5dvlcxHc4tewGi8UeHReUkyHkqnkWIuGflclzxO5(Ard(1bX9bxTpi2BbzVfW7dUMJdxlnl6DNpZNEHSev7YiR4H6lpB4jj1mSQ36s7Dy1vKX725R9LwoUxr6HwxyA6cEKq00h8S3QDEo2qN0meSSuwNLDJ19IfZUXMyPT7MUmsXCOfO136sTCyZ)hrwLtYUssgLtZN210fnjjx1dsZ25YZxCsMv6KM4ft35zAwGd3(LvgwdB7Thz6nS9ZFwEdT)RI87EkPn9B)ZRBC)4DmBECxwECdD928K4g6(Yk7THEUajUne9xzjTn075jvTH3ZV(slBebOD2od95zeJCP10KnnUQw1LYBQQNphIhvR2ePhsWG8lEJq6CcMkYcjtBoCOKQPKR3NpUB0I7GikR7)E98Mn0GGdjeskLtiHSWGKShsqYuqX0uZiWg2WqPnvYNy9jvZUb5CPK1ZjVx1nqYk4nyQllVHSsgMY6By9o0XhstYVAh1VbKBei1lCODVgNRUM7E3nE3V7CPZietoJQuQ(74MwB9cMQc6YgYMiVM2WHJ8rOe5Ncjb18McKhJpHe5nnvZjKEqbfnb7CNs4wfUjwQ3eqOXg24A91wKU6AGTfmCKbI2F8biPpx82hO3iXizQLW7wa7BkLLsLsWip5hGhb6ZmkHjCLAncfF6sjPYGAgzPCRdzstjK1jpzZ29tF93D3r7zGoAlAp9nqKEcgQRiHXozqPmgY(CefopYDchGK1xcsO8LL3cOWwxGLwAU6pg740R2DuSiTfpypBV)UcgBG26VV4r7EGo6jChTfmE0ySUVSUTFSBZrsEiPSYgcdQJDqykZBScbwsZi0TmoV5AW1dw94sd1WgxFJczsNqxs3zq2thTTJ4b3(0o(0LZQUFzbYZ8hoonZRjKI1pSoLO8z)74KG6G0VsFUXTNjRyqgpA0UI3rV4GT7O7mYaXc2r4b6ls8(7DGWrIhSJUkFmYEU1fkMKubktjHiLttZBgM2HDxekASWrInqFDSRiiX2iBoYvZSjkn55eUP7tFDcdToHeRtq6bwNWuvZSPwBr7kAmKC3xJRtG9)n(auktE0LzYguHwq9a5qstMseUP6TFqqRFDc13tWUjFIAMoAvTh9ozJ(EJeFGO3zpyFqQKl1xIELRFjaCnpMtnxdmfvBQ1FFrgORocrwj0w0U72rgc)XKKog(teJrMGmge8Omblhcj50AmzdLc0uKpMSMQUPFLAlqZxuYJ6GSENOND3qqFXYkPVxJovusKq1uzafFJtZoQG5s1B(mz6uHM00dWeT(HtTqFWF7va)xCNsZW)v)oPx8uYKzA6fVMUyPxm(5hh(eS8tg(ZUeZlz4tww(idFQ7b(0BM6qmh8zeHhte(SIWNte(7i5v6SpUKVZiSUC2H1foL7O66opbDhv3p7CE7qyDfV4H1vCgewxLZtyDNsA3XcRRt62vkGULfB43Xfq3lhIxV7CvRu8CRmd1CflxUlXy5E1ZGy5wwEKzXDZxgzmg7MSFPLJyoXY9si)WCFZ2lLvyxwXYv83QJLB5jE10Cx1DNJvN3y5UywW)TJLR4uJLRDcu5(gwFPhhx3jm1LwCCF7Awsv6wetU1WfVN5K7DCP7zUDQpv82Mtt0PYZeLDBXThf3zIsf34AFwCjuQ42mxrIi9R1CqH(udiw(ZCWmjfIUCUT6ZMUqZMUqZI)D2hRHzZtO3U(inmBYbn7J0WSjh0VL9inmBob924CcYIB)ZMlqZMlqZMlqZMlqZMlqZMlqZMlqZMlqZMlql3I7aZMjqZgYSzdz2Szc0Szc0Szc0SHnB2mb6)4dB2NVYxafWFoIHX9B0bN38dfC9MFOa8ex0xoeWtonVxiGV657TbH970KI)Sd7dEVhB5WDXb7c2nSNDc3Tc87WbdaIGKcKyAEDfbj9aPyVKIa5kE1ebiSUHM6BHiqrbsB)k)bUhyVqgilKZpOw57miqJ9wcc2NtTPV)DQKCMEG8UFT)a7V4B6h4aIW96bg29RZh4GtZlXh4(uG73p8aLEV8aVVkED8aVFpWdoTV6DG)a6g0FeF0NGr4JcpIi8FQYxim4QQ)ZKhoX)OP5L)c81Q8vTb8ut9LSbmEPxWgW)9YF3AapD5VxnG)MP(o1aEMk6J(l((ZI8SJFNope5)(v(I3boKp4V2)N4Mc3H2Il)htzYVIZ3tSEjV2zOaf3AlL(BZn5P4ZFPwnjvi)ASMrDiJDMw(aYPGddJahUs61f5Tk2g55(yBhpUlEpbweYEH5N7RFF8Z91wmVN58k8v99wkV3GpoFvV8FdFv)Ow5RAYJW7L)7Xx1zJZ7vhxPTVa8v9DEzEV()88EVTQ4R6N(t4R6LwawNvZ7DrFdC53TXppFJW79Z9vXJ3lV3)QLZ79jpn)8UH3h)82YRXpVKDJRzpiV3jWLQ)fE59(1(k45Kh7K)qEVFz87FU)nEV)ttW79n(oObLFbE8lrAEi8yy88Wy9xbV3)bZrl(OwVTqztNtEUWofdzmCUKIHiRZUwTREhszKYkDW0n0(W3JuMaHspKqyPdmeCe0U47J8O3AX9(XJh0VcAS8q2pDTwCJ0jXDKdJNDeszFa6ZqBPuaWIB4Rc3F5G0TEUplU739J3Vf3dyX97ch2I7Oyf)qVZqsBX9bVhlUJDb1)())'
end

function ApplyCellSettings(settings)
	if not (Cell and LibStub) then
		print("Required Cell functions or libraries are not available.")
		return
	end

	local Serializer = LibStub:GetLibrary("LibSerialize")
	local LibDeflate = LibStub:GetLibrary("LibDeflate")

	if not (Serializer and LibDeflate) then
		print("Required Cell libraries are not available.")
		return
	end

	-- Parse the import string
	local version, data = string.match(settings, "^!CELL:(%d+):ALL!(.+)$")
	version = tonumber(version)

	if not (version and data) then
		print("Invalid Cell import string.")
		return
	end

	if version < Cell.MIN_VERSION then
		print("Incompatible Cell version.")
		return
	end

	-- Decode and decompress the data
	data = LibDeflate:DecodeForPrint(data)
	local success
	success, data = pcall(LibDeflate.DecompressDeflate, LibDeflate, data)
	if not success then
		print("Failed to decompress Cell data.")
		return
	end

	-- Deserialize the data
	success, data = Serializer:Deserialize(data)
	if not (success and data) then
		print("Failed to deserialize Cell data.")
		return
	end

	-- Set the imported data directly to CellDB
	CellDB = data

	-- Handle click-castings and layout auto switch for different game versions
	if Cell.isRetail then
		CellDB["clickCastings"] = data["clickCastings"]
		CellDB["layoutAutoSwitch"] = data["layoutAutoSwitch"]
	else
		CellCharacterDB["clickCastings"] = data["clickCastings"]
		CellCharacterDB["layoutAutoSwitch"] = data["layoutAutoSwitch"]
		CellCharacterDB["revise"] = data["revise"]
	end
end
